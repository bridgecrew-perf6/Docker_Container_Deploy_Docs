version: '3'
services:                                      # 集合
  docker_jenkins:
    user: root                                 # 为了避免一些权限问题 在这我使用了root
    restart: always                            # 重启方式
    image: jenkins/jenkins:latest-jdk8          # 指定服务所使用的镜像 在这里我选择了 latest-jdk8
    container_name: my_jenkins                    # 容器名称
    ports:                                     # 对外暴露的端口定义
      - 10002:8080
      - 10003:50000
    volumes:                                   # 卷挂载路径
      - /Users/tanyong/Documents/project/Docker_Compose_Volumes/jenkins_plus_nginx/jenkins_home/:/var/jenkins_home  # 这是我们一开始创建的目录挂载到容器内的jenkins_home目录
      - /var/run/docker.sock:/var/run/docker.sock            # 我的理解，这条和下两条映射都是为了在容器内操作docker。这个映射到的本地文件简单地说，它是Docker守护进程(Docker daemon)默认监听的Unix域套接字(Unix domain socket)，容器中的进程可以通过它与Docker守护进程进行通信。
      - /usr/bin/docker:/usr/local/bin/docker                # 这是为了我们可以在容器内使用docker命令
      - /usr/local/bin/docker-compose:/usr/local/bin/docker-compose

  docker_nginx:
    restart: always
    image: nginx
    container_name: my_nginx
    ports:
      - 8090:80
      - 8091:80
      - 433:433
    volumes:
      - /Users/tanyong/Documents/project/Docker_Compose_Volumes/jenkins_plus_nginx/nginx/logs:/var/log/nginx
      - /Users/tanyong/Documents/project/Docker_Compose_Volumes/jenkins_plus_nginx/nginx/conf:/etc/nginx/conf.d
      - /Users/tanyong/Documents/project/Docker_Compose_Volumes/jenkins_plus_nginx/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /Users/tanyong/Documents/project/Docker_Compose_Volumes/jenkins_plus_nginx/nginx/html:/usr/share/nginx/html